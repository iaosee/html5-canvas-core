var u=Object.defineProperty;var c=(a,s,t)=>s in a?u(a,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[s]=t;var h=(a,s,t)=>(c(a,typeof s!="symbol"?s+"":s,t),t);import{G as g}from"./lil-gui.esm.7a5dd4ff.js";import{R as y}from"./Rubberband.acc17faa.js";import"./BaseDemo.9c35b300.js";class d extends y{constructor(t){super(t);h(this,"name","\u62D6\u62FD\u753B\u591A\u8FB9\u5F62");h(this,"config",{sides:5,startAngle:0,fillStyle:[71,163,56,.2],strokeStyle:[0,128,255,.8]});this.canvas=t,this.createControl().listenEvents()}static init(t){return new d(t)}start(){return this.drawGrid()}draw(){return this}createControl(){const{config:t}=this;this.gui=new g;const{gui:o}=this;return o.add(t,"sides").min(3).max(50).step(1),o.add(t,"startAngle").min(0).max(180).step(15),o.addColor(t,"fillStyle"),o.addColor(t,"strokeStyle"),this}drawRubberbandShape(t){const{context:o,config:r,mousedownPos:i,rubberbandRect:e}=this;return o.fillStyle=this.rgbaFromArr(r.fillStyle),o.strokeStyle=this.rgbaFromArr(r.strokeStyle),this.drawPolygonPath(i,e.width,r.sides,this.degreesToRadian(r.startAngle)),o.stroke(),o.fill(),this}drawPolygonPath(t,o,r,i=0){const{context:e}=this,n=this.getPolygonPoints(t,o,r,i);e.beginPath(),e.moveTo(n[0].x,n[0].y);for(let l=1;l<r;++l)e.lineTo(n[l].x,n[l].y);return e.closePath(),this}getPolygonPoints(t,o,r,i=0){const e=[];for(let n=0;n<r;n++)e.push({x:t.x+Math.sin(i)*o,y:t.y-Math.cos(i)*o}),i+=2*Math.PI/r;return e}}export{d as Demo};
