var l=Object.defineProperty;var c=(a,e,t)=>e in a?l(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var n=(a,e,t)=>c(a,typeof e!="symbol"?e+"":e,t);import{G as d}from"./lil-gui.esm-hsJpI9MV.js";import{B as u,P as r}from"./BaseDemo-DB1y7toB.js";class h extends u{constructor(t){super(t);n(this,"name","星空轨迹");n(this,"stars",[]);n(this,"mousePos",new r(this.centerX,this.height));n(this,"config",{pointQuantity:500,isFill:!1,maxRangeRadius:800,maxStarRadius:5,shapeStyle:"linellae",backgroundColor:"dark"});this.canvas=t,this.createControl().generatePoint().listenEvents()}static init(t){return new h(t)}clearScreen(){const{context:t,canvas:s,config:i}=this;return t.globalAlpha=.8,t.fillStyle=i.backgroundColor==="dark"?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",t.fillRect(0,0,this.width,this.height),this}draw(){return this.clearScreen().drawScene()}createControl(){const{config:t}=this;this.gui=new d;const{gui:s}=this;return s.add(t,"pointQuantity").min(10).max(5e3).step(10).onChange(()=>this.resetScene()),s.add(t,"maxStarRadius").min(1).max(50).step(1).onChange(()=>this.resetScene()),s.add(t,"maxRangeRadius").min(100).max(1200).step(10).onChange(()=>this.resetScene()),s.add(t,"shapeStyle",{linellae:"linellae",circle:"circle"}),s.add(t,"backgroundColor",{light:"light",dark:"dark"}),s.add(t,"isFill"),this}resetScene(){return this.stars.length=0,this.generatePoint(),this}generatePoint(){const{config:t,mousePos:s}=this;for(let i=0;i<t.pointQuantity;i++)this.stars.push(new m(new r(s.x,s.y),Math.random()*t.maxStarRadius,this.randomRgba(),Math.random()/100+.001,Math.random()*t.maxRangeRadius+10));return this}drawScene(){const{stars:t}=this;return t.forEach(s=>s.draw(this)),this}listenEvents(){const{canvas:t}=this;return t.addEventListener("mousemove",s=>{this.mousePos=this.coordinateTransformation(s.clientX,s.clientY)}),this}}class m{constructor(e,t,s,i=.01,o=Math.random()*500+10){n(this,"theta",Math.random()*Math.PI*2);this.position=e,this.radius=t,this.color=s,this.speed=i,this.maxRangeRadius=o}set x(e){this.position.x=e}get x(){return this.position.x}set y(e){this.position.y=e}get y(){return this.position.y}draw(e){const{context:t,mousePos:s,config:i}=e,o={x:this.x,y:this.y};this.theta+=this.speed,this.x=s.x+Math.cos(this.theta)*this.maxRangeRadius,this.y=s.y+Math.sin(this.theta)*this.maxRangeRadius,t.beginPath(),t.lineCap="round",t.strokeStyle=this.color,i.shapeStyle==="linellae"?(t.lineWidth=this.radius,t.moveTo(o.x,o.y),t.lineTo(this.x,this.y),t.stroke()):i.shapeStyle==="circle"&&(t.lineWidth=1,t.fillStyle=this.color,t.arc(this.x,this.y,this.radius,0,Math.PI*2,!1),t.stroke(),i.isFill&&t.fill()),t.closePath()}}export{h as Demo};
