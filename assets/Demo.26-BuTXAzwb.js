var n=Object.defineProperty;var u=(i,r,e)=>r in i?n(i,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[r]=e;var o=(i,r,e)=>u(i,typeof r!="symbol"?r+"":r,e);import{G as d}from"./lil-gui.esm-hsJpI9MV.js";import{R as c}from"./Rubberband-DpEanIXC.js";import"./BaseDemo-DB1y7toB.js";class h extends c{constructor(e){super(e);o(this,"name","拖拽绘制二/三次次贝塞尔曲线");o(this,"config",{fillStyle:[71,163,56,.2],strokeStyle:[0,128,255,.8],curveType:"QuadraticCurve"});this.canvas=e,this.createControl().listenEvents()}static init(e){return new h(e)}start(){return this.drawGrid()}draw(){return this}createControl(){const{config:e}=this;this.gui=new d;const{gui:t}=this;return t.add(e,"curveType",["QuadraticCurve","CubeBezier"]),t.addColor(e,"fillStyle",255),t.addColor(e,"strokeStyle",255),this}drawRubberbandShape(e){const{context:t,config:a,mousedownPos:b,mousemovePos:l,rubberbandRect:s}=this;return Math.sqrt(Math.pow(s.width,2)+Math.pow(s.height,2)),t.lineWidth=2,t.strokeStyle=this.rgbaFromArr(a.strokeStyle),a.curveType==="QuadraticCurve"?this.drawQuadraticCurve():this.drawCubeBezier(),this}drawQuadraticCurve(){const{context:e,rubberbandRect:t}=this;e.beginPath(),e.moveTo(t.x,t.y),e.quadraticCurveTo(t.x+t.width,t.y,t.x+t.width,t.y+t.height),e.stroke()}drawCubeBezier(){const{context:e,rubberbandRect:t}=this;e.beginPath(),e.moveTo(t.x,t.y),e.bezierCurveTo(t.x,t.y+t.height,t.x+t.width,t.y,t.x+t.width,t.y+t.height),e.stroke()}}export{h as Demo};
