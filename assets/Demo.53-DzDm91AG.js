var w=Object.defineProperty;var u=(h,t,i)=>t in h?w(h,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):h[t]=i;var a=(h,t,i)=>u(h,typeof t!="symbol"?t+"":t,i);import{G as b}from"./lil-gui.esm-hsJpI9MV.js";import{B as y}from"./BaseDemo-DB1y7toB.js";import{A as r}from"./AnimationTimer-DJQ6xzIw.js";import{S as d}from"./Sprite-9nB6cOPC.js";class g extends y{constructor(i){super(i);a(this,"name","物理效果 —— 物体下落");a(this,"ball");a(this,"ledge");a(this,"pushAnimationTimer",new r);a(this,"fallingAnimationTimer",new r);a(this,"config",{BALL_RADIUS:30,LEDGE_WIDTH:200,GRAVITY_FORCE:9.81,moveToLeft:()=>this.pushBallLeft(),moveToRight:()=>this.pushBallRight()});this.canvas=i,this.createControl().initSprite().listenEvents()}static init(i){return new g(i)}createControl(){const{config:i}=this;this.gui=new b;const{gui:e}=this;return e.add(i,"BALL_RADIUS").min(10).max(100).step(10).onFinishChange(()=>this.initSprite()),e.add(i,"LEDGE_WIDTH").min(100).max(600).step(10).onFinishChange(()=>this.initSprite()),e.add(i,"moveToLeft"),e.add(i,"moveToRight"),this}draw(i){return this.clearScreen().drawGrid().drawScene(i)}initSprite(){const{config:i}=this;this.ledge=new d("ledge",{paint(l,s){s.save(),s.shadowColor="rgba(0,0,0,0.5)",s.shadowBlur=8,s.shadowOffsetX=2,s.shadowOffsetY=2,s.fillStyle="rgba(255,255,0,0.6)",s.strokeStyle="rgba(0,0,0,0.6)",s.beginPath(),s.rect(l.x,l.y,l.width,l.height),s.fill(),s.stroke(),s.restore()}}),this.ball=new d("ball",{paint(l,s){s.save(),s.beginPath(),s.arc(l.x+l.width/2,l.y+l.height/2,i.BALL_RADIUS,0,Math.PI*2,!1),s.clip(),s.shadowColor="rgba(0,0,255,0.7)",s.shadowOffsetX=-4,s.shadowOffsetY=-4,s.shadowBlur=8,s.lineWidth=2,s.strokeStyle="rgba(100,100,195,0.8)",s.stroke(),s.beginPath(),s.arc(l.x+l.width/2,l.y+l.height/2,i.BALL_RADIUS/2,0,Math.PI*2,!1),s.clip(),s.shadowColor="rgba(255,255,0,1.0)",s.shadowOffsetX=-4,s.shadowOffsetY=-4,s.shadowBlur=8,s.stroke(),s.restore()}},[]);const e=new T(this.pushAnimationTimer,this.fallingAnimationTimer,this.ball,this.ledge);return this.ball.addBehavior(e),this.ball.width=i.BALL_RADIUS*2,this.ball.height=i.BALL_RADIUS*2,this.ball.x=this.center.x-this.ball.width/2,this.ball.y=50,this.ball.velocityX=100,this.ball.velocityY=0,this.ledge.width=i.LEDGE_WIDTH,this.ledge.x=this.center.x-this.ledge.width/2,this.ledge.y=this.ball.y+this.ball.height,this}pushBall(){const{pushAnimationTimer:i}=this;i.isRunning()&&i.stop(),i.start()}pushBallLeft(){const{ball:i}=this;i.velocityX=i.velocityX<0?i.velocityX:-i.velocityX,this.pushBall()}pushBallRight(){const{ball:i}=this;i.velocityX=i.velocityX>0?i.velocityX:-i.velocityX,this.pushBall()}drawScene(i){const{context:e,ball:l,ledge:s}=this;return s.update(e,i),l.update(e,i),s.paint(e),l.paint(e),this}listenEvents(){return addEventListener("keydown",i=>{i.keyCode===37?this.pushBallLeft():i.keyCode===39&&this.pushBallRight()}),this}}class T{constructor(t,i,e,l){a(this,"lastFrameTime");this.pushAnimationTimer=t,this.fallingAnimationTimer=i,this.ball=e,this.ledge=l}isBallOnLedge(){const{ball:t,ledge:i}=this;return t.x+t.width/2>i.x&&t.x+t.width/2<i.x+i.width}startFalling(){this.fallingAnimationTimer.start(),this.ball.velocityY=0}stopFalling(){this.fallingAnimationTimer.stop(),this.pushAnimationTimer.stop(),this.ball.x=this.ledge.x+this.ledge.width/2-this.ball.width/2,this.ball.y=this.ledge.y-this.ball.width/2*2,this.ball.velocityY=0}execute(t,i,e){const{pushAnimationTimer:l,fallingAnimationTimer:s}=this,n=+new Date,o=1e3/(n-this.lastFrameTime),m=9.81,f=(i.canvas.height-this.ledge.y)/10;l.isRunning()&&(t.x+=t.velocityX/o,this.isBallOnLedge()?l.getElapsedTime()>200&&l.stop():s.isRunning()||(this.startFalling(),this.lastFrameTime=n)),s.isRunning()&&(t.y+=t.velocityY/o,t.velocityY=m*(s.getElapsedTime()/1e3)*f,t.y>i.canvas.height&&this.stopFalling()),this.lastFrameTime=n}}export{g as Demo,T as MoveBallBehavior};
