var d=Object.defineProperty;var m=(n,i,e)=>i in n?d(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var h=(n,i,e)=>m(n,typeof i!="symbol"?i+"":i,e);import{G as w}from"./lil-gui.esm-hsJpI9MV.js";import{B as g}from"./BaseDemo-DB1y7toB.js";import{i as S}from"./flower-BOKp_aAz.js";class f extends g{constructor(e){super(e);h(this,"name","图像缩放");h(this,"image");h(this,"offScreenCanvas");h(this,"offScreenContext");h(this,"config",{scale:1,minScale:.1,maxScale:5});this.canvas=e;const t=S;console.log(t),this.initOffScreenCanvas(),this.loadImage(t).then(a=>this.image=a).then(()=>{this.context.drawImage(this.image,0,0,this.width,this.height),this.offScreenContext.drawImage(this.image,0,0,this.width,this.height),this.drawWatermark(this.context),this.drawWatermark(this.offScreenContext)}),this.createControl().listenEvents()}static init(e){return new f(e)}start(){return this}draw(){return this}initOffScreenCanvas(){const{canvas:e}=this;this.offScreenCanvas=document.createElement("canvas"),this.offScreenContext=this.offScreenCanvas.getContext("2d"),this.offScreenCanvas.width=e.width,this.offScreenCanvas.height=e.height,this.offScreenContext.scale(this.dpr,this.dpr)}createControl(){const{config:e}=this;this.gui=new w;const{gui:t}=this;return t.add(e,"scale").min(e.minScale).max(e.maxScale).step(.01).onChange(()=>this.drawScene()),this}drawWatermark(e){const t="Copyright",a="iaosee, Inc.";let s=null;e.save(),e.fillStyle="rgba(1, 23, 27, 0.5)",e.strokeStyle="yellow",e.shadowColor="rgba(50, 50, 50, 1.0)",e.shadowOffsetX=5,e.shadowOffsetY=5,e.shadowBlur=10,e.font="100px Arial",s=e.measureText(t),e.translate(this.width/2,this.height-this.height/2),e.fillText(t,-s.width/2,0),e.strokeText(t,-s.width/2,0),s=e.measureText(a),e.fillText(a,-s.width/2,100),e.strokeText(a,-s.width/2,100),e.restore()}drawScene(){const{context:e,offScreenCanvas:t,canvas:a,config:r}=this,s=this.width,o=this.height,c=s*r.scale,l=o*r.scale;return e.clearRect(0,0,this.width,this.height),e.drawImage(t,0,0,t.width,t.height,-c/2+s/2,-l/2+o/2,c,l),this}listenEvents(){const{canvas:e}=this;return e.addEventListener("wheel",this.onWheelHandler.bind(this)),this}onWheelHandler(e){const{config:t}=this,a=-e.deltaY/1e3;console.log(t.scale),t.scale+=a,t.scale<=t.minScale?t.scale=t.minScale:t.scale>t.maxScale&&(t.scale=t.maxScale),this.drawScene()}}export{f as Demo};
