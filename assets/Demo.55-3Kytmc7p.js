import{G as e}from"./lil-gui.esm-hsJpI9MV.js";import{B as g}from"./BaseDemo-CScLeyCm.js";import{S as o}from"./Sprite-DYUj_957.js";class a extends g{constructor(i){super(i),this.name="钟摆运动",this.startTime=0,this.config={PIVOT_Y:50,PIVOT_RADIUS:7,WEIGHT_RADIUS:25,INITIAL_ANGLE:Math.PI/4,ROD_LENGTH_IN_PIXELS:300},this.createControl().initSprite()}static init(i){return new a(i)}createControl(){const{config:i}=this;this.gui=new e;const{gui:s}=this;return s.add(i,"PIVOT_Y").min(50).max(this.height-300).step(10).onFinishChange(()=>this.resetSpriteStatus()),s.add(i,"WEIGHT_RADIUS").min(10).max(100).step(10).onFinishChange(()=>this.resetSpriteStatus()),s.add(i,"ROD_LENGTH_IN_PIXELS").min(10).max(1e3).step(10).onFinishChange(()=>this.resetSpriteStatus()),this}draw(i){return this.clearScreen().drawGrid().drawScene(i)}initSprite(){const{context:i,config:s}=this;return this.pendulum=new w,this.resetSpriteStatus(),i.lineWidth=.5,i.strokeStyle="rgba(0,0,0,0.5)",i.shadowOffsetX=2,i.shadowOffsetY=2,i.shadowBlur=4,this}drawScene(i){const{context:s,pendulum:t}=this;return t.update(s,i),t.paint(s),this}resetSpriteStatus(){const{config:i,pendulum:s}=this;return this.pendulum.x=this.width/2,this.pendulum.y=i.PIVOT_Y,this.pendulum.weightRadius=i.WEIGHT_RADIUS,this.pendulum.pivotRadius=i.PIVOT_RADIUS,this.pendulum.initialAngle=i.INITIAL_ANGLE,this.pendulum.angle=i.INITIAL_ANGLE,this.pendulum.rodLength=i.ROD_LENGTH_IN_PIXELS,this}}class w extends o{constructor(i="PendulumSprite"){super(i),this.angle=0,this.weightRadius=0,this.pivotRadius=0,this.initialAngle=0,this.rodLength=0,this.weightX=0,this.weightY=0,this.painter=new d,this.addBehavior(new I)}}class d{constructor(){this.PIVOT_FILL_STYLE="rgba(0,0,0,0.2)",this.WEIGHT_SHADOW_COLOR="rgb(0,0,0)",this.PIVOT_SHADOW_COLOR="rgb(255,255,0)",this.STROKE_COLOR="rgb(100,100,195)"}paint(i,s){this.drawPivot(i,s),this.drawRod(i,s),this.drawWeight(i,s)}drawPivot(i,s){s.save(),s.beginPath(),s.shadowColor=void 0,s.shadowBlur=void 0,s.shadowOffsetX=0,s.shadowOffsetY=0,s.fillStyle="white",s.arc(i.x,i.y,i.pivotRadius/2,0,Math.PI*2,!1),s.fill(),s.stroke(),s.beginPath(),s.fillStyle=this.PIVOT_FILL_STYLE,s.arc(i.x,i.y,i.pivotRadius,0,Math.PI*2,!1),s.fill(),s.stroke(),s.restore()}drawRod(i,s){s.beginPath(),s.moveTo(i.x,i.y),s.lineTo(i.weightX,i.weightY),s.stroke()}drawWeight(i,s){s.save(),s.beginPath(),s.arc(i.weightX,i.weightY,i.weightRadius,0,Math.PI*2,!1),s.clip(),s.shadowColor=this.WEIGHT_SHADOW_COLOR,s.shadowOffsetX=-4,s.shadowOffsetY=-4,s.shadowBlur=8,s.lineWidth=2,s.strokeStyle=this.STROKE_COLOR,s.stroke(),s.beginPath(),s.arc(i.weightX,i.weightY,i.weightRadius/2,0,Math.PI*2,!1),s.clip(),s.shadowColor=this.PIVOT_SHADOW_COLOR,s.shadowOffsetX=-4,s.shadowOffsetY=-4,s.shadowBlur=8,s.stroke(),s.restore()}}class I{constructor(){this.GRAVITY_FORCE=32,this.ROD_LENGTH=.8,this.startTime=0}execute(i,s,t){this.startTime||(this.startTime=t);const r=(t-this.startTime)/1e3;i.angle=i.initialAngle*Math.cos(Math.sqrt(this.GRAVITY_FORCE/this.ROD_LENGTH)*r),i.weightX=i.x+Math.sin(i.angle)*i.rodLength,i.weightY=i.y+Math.cos(i.angle)*i.rodLength}}export{a as Demo,d as PendulumPainter,w as PendulumSprite,I as SwingBehavior};
