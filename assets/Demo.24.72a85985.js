var c=Object.defineProperty;var f=(r,s,t)=>s in r?c(r,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[s]=t;var a=(r,s,t)=>(f(r,typeof s!="symbol"?s+"":s,t),t);import{G as w}from"./lil-gui.esm.7a5dd4ff.js";import{R as y}from"./Rubberband.acc17faa.js";import{R as m}from"./RegularPolygon.3940033a.js";import"./BaseDemo.9c35b300.js";import"./Polygon.2e760a6a.js";class h extends y{constructor(t){super(t);a(this,"name","\u591A\u8FB9\u5F62\u5BF9\u8C61-\u4FDD\u5B58\u7ED8\u5236");a(this,"polygons",[]);a(this,"config",{sides:5,startAngle:0,fillStyle:[71,163,56,.2],strokeStyle:[0,128,255,.8],filled:!0,redraw:()=>{console.log("redraw"),this.clearScreen().drawGrid().drawPolygons()}});this.canvas=t,this.createControl().listenEvents()}static init(t){return new h(t)}start(){return this.drawGrid().drawPolygons()}draw(){return this}createControl(){const{config:t}=this;this.gui=new w;const{gui:e}=this;return e.add(t,"sides").min(3).max(50).step(1),e.add(t,"startAngle").min(0).max(180).step(15),e.add(t,"filled"),e.addColor(t,"fillStyle"),e.addColor(t,"strokeStyle"),e.add(t,"redraw"),this}drawRubberbandShape(t){const{context:e,config:o,mousedownPos:i,mousemovePos:u,rubberbandRect:n}=this,d=i.y===u.y?Math.abs(t.x-i.x):n.height/Math.sin(Math.atan(n.height/n.width)),g=Math.sqrt(Math.pow(n.width,2)+Math.pow(n.height,2)),l=new m({x:i.x,y:i.y,radius:d,sides:o.sides,startAngle:this.degreesToRadian(o.startAngle),fillStyle:this.rgbaFromArr(o.fillStyle),strokeStyle:this.rgbaFromArr(o.strokeStyle),filled:o.filled});return l.createPath(e),l.stroke(e),l.filled&&l.fill(e),!this.dragging&&!i.equals(t)&&(console.log(d),console.log(g),this.polygons.push(l)),this}drawPolygons(){const{context:t}=this;return this.polygons.forEach(e=>{e.stroke(t),e.filled&&e.fill(t)}),this}listenEvents(){return super.listenEvents(),window.addEventListener("keydown",t=>t.key==="c"&&(this.polygons=[])),this}}export{h as Demo};
