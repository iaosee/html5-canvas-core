import{G as l}from"./lil-gui.esm.7a5dd4ff.js";import{R as h}from"./Rubberband.c7ec187d.js";import"./BaseDemo.deaf79c0.js";class a extends h{constructor(t){super(t),this.canvas=t,this.name="\u62D6\u62FD\u753B\u591A\u8FB9\u5F62",this.config={sides:5,startAngle:0,fillStyle:[71,163,56,.2],strokeStyle:[0,128,255,.8]},this.createControl().listenEvents()}static init(t){return new a(t)}start(){return this.drawGrid()}draw(){return this}createControl(){const{config:t}=this;this.gui=new l;const{gui:o}=this;return o.add(t,"sides").min(3).max(50).step(1),o.add(t,"startAngle").min(0).max(180).step(15),o.addColor(t,"fillStyle"),o.addColor(t,"strokeStyle"),this}drawRubberbandShape(t){const{context:o,config:s,mousedownPos:e,rubberbandRect:r}=this;return o.fillStyle=this.rgbaFromArr(s.fillStyle),o.strokeStyle=this.rgbaFromArr(s.strokeStyle),this.drawPolygonPath(e,r.width,s.sides,this.degreesToRadian(s.startAngle)),o.stroke(),o.fill(),this}drawPolygonPath(t,o,s,e=0){const{context:r}=this,i=this.getPolygonPoints(t,o,s,e);r.beginPath(),r.moveTo(i[0].x,i[0].y);for(let n=1;n<s;++n)r.lineTo(i[n].x,i[n].y);return r.closePath(),this}getPolygonPoints(t,o,s,e=0){const r=[];for(let i=0;i<s;i++)r.push({x:t.x+Math.sin(e)*o,y:t.y-Math.cos(e)*o}),e+=2*Math.PI/s;return r}}export{a as Demo};
