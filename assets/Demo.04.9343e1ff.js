import{B as s}from"./BaseDemo.deaf79c0.js";import{r as b}from"./util.064ed5aa.js";import{I as a}from"./presta_illustration_20.082a40c8.js";class r extends s{constructor(e){super(e),this.canvas=e,this.name="\u56FE\u50CF\u9009\u533A",this.dragging=!1,this.mousedownPosition={x:0,y:0},this.rubberbandDiv=document.createElement("div"),this.rubberbandRectangle={},this.addRubberbandToScene().listenEvents()}static init(e){return new r(e)}draw(){return this}destroy(){super.destroy(),this.rubberbandDiv.remove()}addRubberbandToScene(){return b(this.rubberbandDiv,{position:"absolute",zIndex:"5",border:"2px solid red",cursor:"crosshair"}),document.body.appendChild(this.rubberbandDiv),this}rubberbandStart(e,t){this.rubberbandRectangle.left=this.mousedownPosition.x=e,this.rubberbandRectangle.top=this.mousedownPosition.y=t,this.moveRubberbandDiv(),this.showRubberbandDiv(),this.dragging=!0}moveRubberbandDiv(){return this.rubberbandDiv.style.top=this.rubberbandRectangle.top+"px",this.rubberbandDiv.style.left=this.rubberbandRectangle.left+"px",this}resizeRubberbandDiv(){return this.rubberbandDiv.style.width=this.rubberbandRectangle.width+"px",this.rubberbandDiv.style.height=this.rubberbandRectangle.height+"px",this}showRubberbandDiv(){return this.rubberbandDiv.style.display="block",this}hideRubberbandDiv(){this.rubberbandDiv.style.display="none"}rubberbandStretch(e,t){this.rubberbandRectangle.left=e<this.mousedownPosition.x?e:this.mousedownPosition.x,this.rubberbandRectangle.top=t<this.mousedownPosition.y?t:this.mousedownPosition.y,this.rubberbandRectangle.width=Math.abs(e-this.mousedownPosition.x),this.rubberbandRectangle.height=Math.abs(t-this.mousedownPosition.y),this.moveRubberbandDiv(),this.resizeRubberbandDiv()}rubberbandEnd(){const{context:e,canvas:t}=this,n=t.getBoundingClientRect();try{e.drawImage(t,this.rubberbandRectangle.left-n.left,this.rubberbandRectangle.top-n.top,this.rubberbandRectangle.width,this.rubberbandRectangle.height,0,0,this.width,this.height)}catch(i){console.log(i)}this.rubberbandDiv.style.width=String(0),this.rubberbandDiv.style.height=String(0),this.resetRubberbandRectangle(),this.hideRubberbandDiv(),this.dragging=!1}resetRubberbandRectangle(){return this.rubberbandRectangle={top:0,left:0,width:0,height:0},this}drawImage(){const{canvas:e,context:t}=this;return t.drawImage(this.image,0,0,this.width,this.height),this}async listenEvents(){const{canvas:e,context:t}=this;try{this.image=await this.loadImage(a),this.drawImage()}catch(n){console.log(n)}return e.addEventListener("mousedown",this.mousedownHandler(),!1),document.addEventListener("mousemove",this.mousemoveHandler(),!1),document.addEventListener("mouseup",this.mouseupHandler(),!1),window.addEventListener("keyup",this.keyupHandler(),!1),this}mousedownHandler(){return e=>{const t=e.x||e.clientX,n=e.y||e.clientY;e.preventDefault(),this.rubberbandStart(t,n)}}mousemoveHandler(){return e=>{const t=e.x||e.clientX,n=e.y||e.clientY;e.preventDefault(),this.dragging&&this.rubberbandStretch(t,n)}}mouseupHandler(){return e=>{e.preventDefault(),this.rubberbandEnd()}}keyupHandler(){return e=>{!e||e.keyCode!==32||this.clearScreen().drawImage()}}}export{r as Demo};
