import{G as h}from"./lil-gui.esm-hsJpI9MV.js";import{B as c}from"./BaseDemo-CScLeyCm.js";import{R as a}from"./index-BAL6X_Bf.js";class m{constructor(e,t){this.ctx=e,this.config={outerWidth:10,innerWidth:10,innerDash:[10,20],segment:[[50,50],[200,50],[200,200],[100,200]]},this.config={...this.config,...t}}render(){const{innerWidth:e,outerWidth:t,segment:s}=this.config;s!=null&&s.length&&(this.drawOuterPipe(),this.drawInterPipe())}drawOuterPipe(){const{ctx:e}=this,{innerWidth:t,outerWidth:s,segment:i}=this.config;e.beginPath(),e.moveTo(i[0][0],i[0][1]);for(let o=1;o<i.length;o++){const n=i[o];e.lineTo(n[0],n[1])}e.stroke()}drawInterPipe(){const{ctx:e}=this,{innerWidth:t,outerWidth:s,segment:i}=this.config;e.beginPath(),e.moveTo(i[0][0],i[0][1]);for(let o=1;o<i.length;o++){const n=i[o];e.lineTo(n[0],n[1])}e.stroke()}}class r extends c{constructor(e){super(e),this.name="管道绘制 — 简单流动管道",this.lastTime=0,this.random=a.init(-5,5),this.config={moveSpeed:100,pipeColor:"rgba(150,150,150,1)",flowColor:"rgba(0,0,255,0.8)"},this.segment=[[101,76],[475,77],[475,250],[98,250],[100,402],[476,401],[475,500],[97,500],[99,704],[475,702],[475,877],[98,877],[98,1e3],[651,1e3],[650,100],[850,100],[850,600]],this.offset=0,this.createControl()}static init(e){return new r(e)}createControl(){const{config:e}=this;this.gui=new h;const{gui:t}=this;return t.add(e,"moveSpeed",10,300),t.addColor(e,"pipeColor"),t.addColor(e,"flowColor"),this}draw(e=0){return this.lastTime||(this.lastTime=e),this.drawScene(e),this.lastTime=e,this}clearScreen(){const{context:e,canvas:t,config:s}=this;return e.clearRect(0,0,this.width,this.height),this}drawScene(e=0){const{context:t,config:s}=this;this.clearScreen().drawGrid(),t.save(),t.lineWidth=20,t.lineCap="round",t.lineJoin="round",t.strokeStyle=s.pipeColor||"rgba(150,150,150,1)",t.beginPath(),t.moveTo(this.segment[0][0],this.segment[0][1]);for(let i=1;i<this.segment.length;i++){const o=this.segment[i];t.lineTo(o[0],o[1])}t.stroke(),t.restore(),t.save(),t.lineWidth=10,t.lineCap="round",t.lineJoin="round",t.lineDashOffset=this.offset,t.strokeStyle=s.flowColor||"rgba(0, 0, 255, 0.8)",t.setLineDash([20,30]),t.beginPath(),t.moveTo(this.segment[0][0],this.segment[0][1]);for(let i=1;i<this.segment.length;i++){const o=this.segment[i];t.lineTo(o[0],o[1])}return t.stroke(),t.restore(),this.update(e),this}update(e){const{context:t,config:s}=this,i=e-this.lastTime,o=s.moveSpeed/1e3*i;this.offset-=o}}export{r as Demo,m as Pipe};
