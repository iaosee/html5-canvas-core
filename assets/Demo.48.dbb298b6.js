var T=Object.defineProperty;var I=(f,h,e)=>h in f?T(f,h,{enumerable:!0,configurable:!0,writable:!0,value:e}):f[h]=e;var a=(f,h,e)=>(I(f,typeof h!="symbol"?h+"":h,e),e);import{G as c}from"./lil-gui.esm.7a5dd4ff.js";import{S as l}from"./stats.min.9233e90c.js";import{B as E}from"./BaseDemo.9c35b300.js";import{i as u}from"./sky.df5be63d.js";const S="/assets/smalltree.a099f29f.png",_="/assets/tree-twotrunks.c0533924.png",p="/assets/grass.48f65ee8.png",C="/assets/grass2.1b1a5ff2.png";class w extends E{constructor(e){super(e);a(this,"name","\u52A8\u753B \u2014\u2014 \u89C6\u5DEE\u6EDA\u52A8");a(this,"lastTime",0);a(this,"sky");a(this,"tree");a(this,"nearTree");a(this,"grass");a(this,"grass2");a(this,"skyOffset",0);a(this,"treeOffset",0);a(this,"nearTreeOffset",0);a(this,"grassOffset",0);a(this,"grass2Offset",0);a(this,"config",{SKY_VELOCITY:20,TREE_VELOCITY:40,FAST_TREE_VELOCITY:60,GRASS_VELOCITY:100});this.canvas=e,this.createControl().initStats().initResource().then(t=>{this.sky=t[0],this.tree=t[1],this.nearTree=t[2],this.grass=t[3],this.grass2=t[4]}).then(()=>this.startPlay())}static init(e){return new w(e)}start(){return this}draw(e){return this.clearScreen().drawGrid().drawScene(e),this.stats.update(),this.lastTime=e,this}initStats(){return this.stats=new l,this.stats.showPanel(0),document.body.appendChild(this.stats.dom),this}createControl(){const{config:e}=this;this.gui=new c;const{gui:t}=this;return t.add(e,"SKY_VELOCITY").min(10).max(200).step(10),t.add(e,"TREE_VELOCITY").min(20).max(400).step(10),t.add(e,"FAST_TREE_VELOCITY").min(30).max(600).step(10),t.add(e,"GRASS_VELOCITY").min(80).max(800).step(10),this}initResource(){return Promise.all([this.loadImage(u),this.loadImage(S),this.loadImage(_),this.loadImage(p),this.loadImage(C)])}drawScene(e){const{context:t,canvas:s,config:d,sky:i,tree:m,nearTree:O,grass:r,grass2:g}=this,o=1e3/(e-this.lastTime);this.skyOffset=this.skyOffset<i.width?this.skyOffset+d.SKY_VELOCITY/o:0,this.treeOffset=this.treeOffset<s.width/6*2?this.treeOffset+d.TREE_VELOCITY/o:0,this.nearTreeOffset=this.nearTreeOffset<s.width/4*2?this.nearTreeOffset+d.FAST_TREE_VELOCITY/o:0,this.grassOffset=this.grassOffset<r.width?this.grassOffset+d.GRASS_VELOCITY/o:0,t.save(),t.translate(-this.skyOffset,-1200),t.drawImage(i,0,s.height-i.height+80),t.drawImage(i,i.width-2,s.height-i.height+80),t.drawImage(i,(i.width-2)*2,s.height-i.height+80),t.restore(),t.save(),t.translate(-this.treeOffset,-1200);for(let n=0;n<=8;n++)t.drawImage(m,s.width/6*n,s.height-m.height);t.restore(),t.save(),t.translate(-this.nearTreeOffset,-1200);for(let n=0;n<=6;n++)t.drawImage(O,s.width/4*n,s.height-O.height);return t.restore(),t.save(),t.translate(-this.grassOffset,-1200),t.drawImage(r,0,s.height-r.height),t.drawImage(r,r.width,s.height-r.height),t.drawImage(r,r.width*2,s.height-r.height),t.drawImage(g,0,s.height-g.height),t.drawImage(g,g.width,s.height-g.height),t.drawImage(g,g.width*2,s.height-g.height),t.restore(),this}}export{w as Demo};
