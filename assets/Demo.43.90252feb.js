import{G as d}from"./lil-gui.esm.7a5dd4ff.js";import{B as g,P as u}from"./BaseDemo.deaf79c0.js";import{i as l}from"./flower.21c0439b.js";class h extends g{constructor(e){super(e),this.canvas=e,this.name="\u56FE\u50CF \u2014\u2014 \u653E\u5927\u955C\u5B9E\u73B0",this.magnifyRectangle=null,this.magnifyingGlassPos=new u,this.config={scale:.2,zoomScale:2,zoomRadius:150,resetScene:()=>this.drawScene()},this.initOffScreenCanvas(),this.loadImage(l).then(i=>this.image=i).then(()=>{this.drawScene()}),this.createControl().listenEvents()}static init(e){return new h(e)}start(){return this}draw(){return this}initOffScreenCanvas(){this.offScreenCanvas=document.createElement("canvas"),this.offScreenContext=this.offScreenCanvas.getContext("2d"),this.offScreenCanvas.width=this.width,this.offScreenCanvas.height=this.height}createControl(){const{config:e}=this;this.gui=new d;const{gui:i}=this;return i.add(e,"scale").step(.01).min(.1).max(1).onChange(()=>this.drawScene()),i.add(e,"zoomScale").step(1).min(.5).max(10),i.add(e,"zoomRadius").step(10).min(50).max(1e3),this}drawScene(){const{context:e,offScreenContext:i,canvas:t,config:a,image:s}=this,c=this.width,r=this.height,m=s.width*a.scale/s.width,n=s.width*a.scale,o=s.height*m;return e.clearRect(0,0,t.width,t.height),e.drawImage(this.image,-n/2+c/2,-o/2+r/2,n,o),this.originalImageData=e.getImageData(0,0,t.width,t.height),this}drawMagnifyingGlass(e){const{context:i,config:t}=this;return this.magnifyingGlassPos.x=e.x,this.magnifyingGlassPos.x=e.y,i.clearRect(0,0,i.canvas.width,i.canvas.height),this.drawScene(),i.save(),i.lineWidth=t.zoomRadius*.1,i.strokeStyle="rgba(100,255,255,0.5)",i.beginPath(),i.arc(e.x,e.y,t.zoomRadius,0,Math.PI*2,!1),i.clip(),i.drawImage(i.canvas,e.x-t.zoomRadius,e.y-t.zoomRadius,t.zoomRadius*2,t.zoomRadius*2,e.x-t.zoomRadius-(t.zoomRadius*2*t.zoomScale-t.zoomRadius*2)/2,e.y-t.zoomRadius-(t.zoomRadius*2*t.zoomScale-t.zoomRadius*2)/2,t.zoomRadius*2*t.zoomScale,t.zoomRadius*2*t.zoomScale),i.stroke(),i.restore(),this}listenEvents(){const{canvas:e}=this;return e.addEventListener("mousemove",i=>{const t=this.coordinateTransformation(i.clientX,i.clientY);this.drawMagnifyingGlass(t)}),this}}export{h as Demo};
