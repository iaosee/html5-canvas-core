import{B as l}from"./BaseDemo-CScLeyCm.js";class a extends l{constructor(t){super(t),this.name="线条连接",this.polylineList=[],this.paths=[],this.mousePosition={x:0,y:0},this.lineColor="rgba(0,0,255,0.9)",this.pointColor=this.randomRgba(),this.startDraw=!1,this.listenEvents()}static init(t){return new a(t)}draw(){return this.clearScreen().drawGrid().drawLines().drawPoint()}drawPoint(){const{paths:t,context:e}=this;for(let s=0,i=t.length;s<i;s++)e.beginPath(),e.arc(t[s].x,t[s].y,5,0,Math.PI*2,!1),e.fillStyle=this.pointColor,e.fill();return this}drawLines(){const{paths:t,mousePosition:e,context:s}=this;if(!t.length)return this;s.beginPath(),s.moveTo(t[0].x,t[0].y);for(let i=1,r=t.length;i<r;i++)s.lineTo(t[i].x,t[i].y);return this.startDraw&&s.lineTo(e.x,e.y),s.strokeStyle=this.lineColor,s.stroke(),this}listenEvents(){const{canvas:t,context:e}=this,s=n=>{const o=this.coordinateTransformation(n.clientX,n.clientY);this.paths.push(o),this.startDraw=!0},i=n=>{const o=this.coordinateTransformation(n.clientX,n.clientY);console.log(o),this.startDraw=!1},r=n=>{const o=this.coordinateTransformation(n.clientX,n.clientY);this.mousePosition=o};t.addEventListener("click",s,!1),t.addEventListener("dblclick",i,!1),t.addEventListener("mousemove",r,!1)}}export{a as Demo};
