class i{constructor(e,t){if(this.minValue=0,this.maxValue=0,!(this instanceof i))return new i(e,t);this.minValue=Number.isFinite(e)?e:this.minValue,this.maxValue=Number.isFinite(t)?t:this.maxValue}static init(e,t){if(e>t)throw new Error(`min(${e}) greater than max(${t})`);return new i(e,t)}min(e){return this.minValue=Number.isFinite(e)?e:this.minValue,this}max(e){if(e<this.minValue)throw new Error(`max(${e}) less than min(${this.minValue})`);return this.maxValue=Number.isFinite(e)?e:this.maxValue,this}range(e,t){if(e>t)throw new Error(`min(${e}) greater than max(${t})`);return this.min(e).max(t)}random(){return Math.round(Math.random()*(this.maxValue-this.minValue))+this.minValue}getOne(){return this.random()}getGroup(e){const t=[];if(e>this.maxValue-this.minValue+1)throw new Error(`${this.minValue} ~ ${this.maxValue} \u8303\u56F4\u4E0D\u80FD\u751F\u6210 ${e} \u4E2A\u503C`);let r=this.getOne();for(;t.length<e;)t.includes(r)?r=this.getOne():t.push(r);return t}}export{i as R};
