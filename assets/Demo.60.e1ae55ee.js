var f=Object.defineProperty;var y=(d,h,e)=>h in d?f(d,h,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[h]=e;var a=(d,h,e)=>(y(d,typeof h!="symbol"?h+"":h,e),e);import{G as x}from"./lil-gui.esm.7a5dd4ff.js";import{B as P,P as s}from"./BaseDemo.9c35b300.js";import{P as u,C as p}from"./Polygon.2e760a6a.js";import{R as S}from"./index.f77d70f5.js";import{C as v}from"./CircleImage.b7ada592.js";import{R as B}from"./RandomConvexPolygon.63aced17.js";import{g as C}from"./golfball.de451e99.js";class w extends P{constructor(e){super(e);a(this,"name","\u78B0\u649E\u68C0\u6D4B \u2014 \u968F\u673A\u591A\u8FB9\u5F62");a(this,"shapes",[]);a(this,"shapeBeingDragged");a(this,"mousedownPos",new s(0,0));a(this,"mousemovePos",new s(0,0));a(this,"randomPolygon",new B({maxWidth:200,maxHeight:200}));a(this,"polygonPoints",[[new s(100,100),new s(100,200),new s(200,200)],[new s(300,100),new s(300,200),new s(400,200),new s(400,100)],[new s(500,100),new s(475,200),new s(600,200),new s(625,100)]]);a(this,"config",{boundingBox:!1,centroid:!1});this.canvas=e,this.createControl().initShapes().listenEvents()}static init(e){return new w(e)}createControl(){const{config:e}=this;this.gui=new x;const{gui:i}=this;return i.add(e,"boundingBox").onFinishChange(t=>this.drawScene()),i.add(e,"centroid").onFinishChange(t=>this.drawScene()),this}start(){return this.draw()}draw(){return this.drawScene()}initShapes(){const{polygonPoints:e}=this,i=this.polygonPoints.length;for(let t=0;t<i;++t){const n=new u,o=e[t];n.setPoints(o),n.name=`Polygon ${t}`,n.strokeStyle=this.randomRgba(),n.fillStyle=this.randomRgba(),this.shapes.push(n)}for(let t=0;t<2;t++)for(let n=0;n<5;n++){const o=this.randomPolygon.getConvex(S.init(4,10).random()),l=new u;l.setPoints(o),l.move(n*200,(t+1)*200),l.name=`Polygon ${t}-${n}`,l.strokeStyle=this.randomRgba(),l.fillStyle=this.randomRgba(),this.shapes.push(l)}return this.shapes.push(new p({name:"circle 1",x:100,y:50,radius:30})),this.shapes.push(new p({name:"circle 2",x:250,y:50,radius:50})),this.shapes.push(new v({name:"circleImage",x:800,y:100,radius:72,strokeStyle:"red",imageSource:C})),this}drawShapes(){const{context:e,config:i}=this;return this.shapes.forEach(t=>{if(t.stroke(e),t.fill(e),i.boundingBox){const n=t.getBoundingBox();e.strokeRect(n.x,n.y,n.width,n.height)}if(i.centroid){const n=t.centroid();e.beginPath(),e.arc(n.x,n.y,5,0,Math.PI*2,!1),e.closePath(),e.fill()}}),this}drawScene(){return this.clearScreen().drawGrid().drawShapes(),this}detectCollisions(){const{context:e,shapes:i,shapeBeingDragged:t}=this;let n=30;if(!!t)return e.save(),e.font="20px Palatino",i.forEach(o=>{o!==t&&t.collidesWith(o)&&(e.lineWidth=10,e.fillStyle="red",e.strokeStyle="red",e.fillText(`${t.name} Collision with ${o.name}`,20,n),e.strokeRect(0,0,this.width,this.height),n+=40)}),e.restore(),this}listenEvents(){const{canvas:e,context:i,dpr:t,mousedownPos:n,mousemovePos:o,shapes:l}=this;return e.addEventListener("mousedown",c=>{const r=this.coordinateTransformation(c.clientX,c.clientY);l.forEach(g=>{g.isPointInPath(i,r.x*t,r.y*t)&&(this.shapeBeingDragged=g,n.x=r.x,n.y=r.y,o.x=r.x,o.y=r.y)})}),e.addEventListener("mousemove",c=>{var m;const r=this.coordinateTransformation(c.clientX,c.clientY);if(!this.shapeBeingDragged)return;const g={x:r.x-o.x,y:r.y-o.y};(m=this.shapeBeingDragged)==null||m.move(g.x,g.y),o.x=r.x,o.y=r.y,this.draw().detectCollisions()}),e.addEventListener("mouseup",c=>{this.shapeBeingDragged=null}),this}}export{w as Demo};
