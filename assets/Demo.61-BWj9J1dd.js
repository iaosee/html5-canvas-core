var p=Object.defineProperty;var u=(d,c,e)=>c in d?p(d,c,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[c]=e;var r=(d,c,e)=>u(d,typeof c!="symbol"?c+"":c,e);import{G as f}from"./lil-gui.esm-hsJpI9MV.js";import{B as w,P as a}from"./BaseDemo-DB1y7toB.js";import{R as v}from"./index-BQRu6cko.js";import{P as x,C as g,V as S}from"./Polygon-DGNxmrap.js";import{C as P}from"./CircleImage-CUqYqt57.js";import{R as k}from"./RandomConvexPolygon-DHYIvaIw.js";import{g as C}from"./golfball-fqIsnLt-.js";class m extends w{constructor(e){super(e);r(this,"name","碰撞检测 — 最小平移向量");r(this,"shapes",[]);r(this,"lastTime",0);r(this,"isStuck",!1);r(this,"shapeMoving");r(this,"velocity",{x:300,y:200});r(this,"lastVelocity",{x:300,y:200});r(this,"mousedownPos",new a(0,0));r(this,"mousemovePos",new a(0,0));r(this,"randomPolygon",new k({maxWidth:200,maxHeight:200}));r(this,"polygonPoints",[[new a(100,100),new a(100,200),new a(200,200)],[new a(300,100),new a(300,200),new a(400,200),new a(400,100)],[new a(500,100),new a(475,200),new a(600,200),new a(625,100)]]);r(this,"config",{boundingBox:!1,count:10});this.canvas=e,this.createControl().initShapes().listenEvents()}static init(e){return new m(e)}createControl(){const{config:e}=this;this.gui=new f;const{gui:n}=this;return n.add(e,"boundingBox").onFinishChange(t=>this.drawScene()),this}draw(e=0){const{shapeMoving:n,velocity:t}=this;if(this.lastTime||(this.lastTime=e),n){const i=e-this.lastTime,o=t.x*(i/1e3),s=t.y*(i/1e3);n.move(o,s)}return this.drawScene(),this.lastTime=e,this}initShapes(){const{polygonPoints:e}=this,n=this.polygonPoints.length;for(let t=0;t<n;++t){const i=new x,o=e[t];i.setPoints(o),i.name=`Polygon ${t}`,i.strokeStyle=this.randomRgba(),i.fillStyle=this.randomRgba(),this.shapes.push(i)}for(let t=0;t<2;t++)for(let i=0;i<3;i++){const o=this.randomPolygon.getConvex(v.init(4,10).random()),s=new x;s.setPoints(o),s.move(i*300,(t+1)*300),s.name=`Polygon ${t}-${i}`,s.strokeStyle=this.randomRgba(),s.fillStyle=this.randomRgba(),this.shapes.push(s)}return this.shapes.push(new g({name:"circle 1",x:100,y:50,radius:30})),this.shapes.push(new g({name:"circle 2",x:250,y:50,radius:50})),this.shapes.push(new P({name:"circleImage",x:800,y:100,radius:72,strokeStyle:"red",imageSource:C})),this}drawShapes(){const{context:e,config:n}=this;return this.shapes.forEach(t=>{if(t.stroke(e),t.fill(e),n.boundingBox){const i=t.getBoundingBox();e.strokeRect(i.x,i.y,i.width,i.height)}}),this}drawScene(){return this.clearScreen().drawGrid().drawShapes().detectCollisions(),this}detectCollisions(){const{context:e,shapes:n,shapeMoving:t,velocity:i}=this;let o=30;if(!t)return this;e.save(),e.font="20px Palatino",n.forEach(h=>{if(h===t)return;const l=t.collidesMTVWith(h);(l.axis||l.overlap)&&(e.lineWidth=10,e.fillStyle="red",e.strokeStyle="red",e.fillText(`${t.name} Collision with ${h.name}`,20,o),e.strokeRect(0,0,this.width,this.height),o+=40,!this.isStuck&&this.stick(l))}),e.restore();const s=t==null?void 0:t.getBoundingBox();return(s.x+s.width>this.width||s.x<0)&&(i.x=-i.x),(s.y+s.height>this.height||s.y<0)&&(i.y=-i.y),this}stick(e){const{shapeMoving:n,velocity:t,lastVelocity:i}=this;if(!e.axis){const h=new a,l=Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2));h.x=t.x/l,h.y=t.y/l,e.axis=new S(h.x,h.y)}let o=e.axis.x*(e.overlap+2),s=e.axis.y*(e.overlap+2);(o<0&&t.x<0||o>0&&t.x>0)&&(o=-o),(s<0&&t.y<0||s>0&&t.y>0)&&(s=-s),setTimeout(()=>{n.move(o,s)},500),i.x=t.x,i.y=t.y,t.x=t.y=0,this.isStuck=!0}listenEvents(){const{canvas:e,context:n,dpr:t,shapes:i,velocity:o,lastVelocity:s}=this;return e.addEventListener("mousedown",h=>{const l=this.coordinateTransformation(h.clientX,h.clientY);o.x=s.x,o.y=s.y,this.isStuck=!1,this.shapeMoving=void 0,i.forEach(y=>{y.isPointInPath(n,l.x*t,l.y*t)&&(this.shapeMoving=y)})}),this}}export{m as Demo};
