import{G as r}from"./lil-gui.esm-hsJpI9MV.js";import{B as h,P as n}from"./BaseDemo-CScLeyCm.js";class o extends h{constructor(s){super(s),this.name="星空轨迹",this.stars=[],this.mousePos=new n(this.centerX,this.height),this.config={pointQuantity:500,isFill:!1,maxRangeRadius:800,maxStarRadius:5,shapeStyle:"linellae",backgroundColor:"dark"},this.createControl().generatePoint().listenEvents()}static init(s){return new o(s)}clearScreen(){const{context:s,canvas:t,config:i}=this;return s.globalAlpha=.8,s.fillStyle=i.backgroundColor==="dark"?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",s.fillRect(0,0,this.width,this.height),this}draw(){return this.clearScreen().drawScene()}createControl(){const{config:s}=this;this.gui=new r;const{gui:t}=this;return t.add(s,"pointQuantity").min(10).max(5e3).step(10).onChange(()=>this.resetScene()),t.add(s,"maxStarRadius").min(1).max(50).step(1).onChange(()=>this.resetScene()),t.add(s,"maxRangeRadius").min(100).max(1200).step(10).onChange(()=>this.resetScene()),t.add(s,"shapeStyle",{linellae:"linellae",circle:"circle"}),t.add(s,"backgroundColor",{light:"light",dark:"dark"}),t.add(s,"isFill"),this}resetScene(){return this.stars.length=0,this.generatePoint(),this}generatePoint(){const{config:s,mousePos:t}=this;for(let i=0;i<s.pointQuantity;i++)this.stars.push(new l(new n(t.x,t.y),Math.random()*s.maxStarRadius,this.randomRgba(),Math.random()/100+.001,Math.random()*s.maxRangeRadius+10));return this}drawScene(){const{stars:s}=this;return s.forEach(t=>t.draw(this)),this}listenEvents(){const{canvas:s}=this;return s.addEventListener("mousemove",t=>{this.mousePos=this.coordinateTransformation(t.clientX,t.clientY)}),this}}class l{constructor(s,t,i,e=.01,a=Math.random()*500+10){this.position=s,this.radius=t,this.color=i,this.speed=e,this.maxRangeRadius=a,this.theta=Math.random()*Math.PI*2}set x(s){this.position.x=s}get x(){return this.position.x}set y(s){this.position.y=s}get y(){return this.position.y}draw(s){const{context:t,mousePos:i,config:e}=s,a={x:this.x,y:this.y};this.theta+=this.speed,this.x=i.x+Math.cos(this.theta)*this.maxRangeRadius,this.y=i.y+Math.sin(this.theta)*this.maxRangeRadius,t.beginPath(),t.lineCap="round",t.strokeStyle=this.color,e.shapeStyle==="linellae"?(t.lineWidth=this.radius,t.moveTo(a.x,a.y),t.lineTo(this.x,this.y),t.stroke()):e.shapeStyle==="circle"&&(t.lineWidth=1,t.fillStyle=this.color,t.arc(this.x,this.y,this.radius,0,Math.PI*2,!1),t.stroke(),e.isFill&&t.fill()),t.closePath()}}export{o as Demo};
