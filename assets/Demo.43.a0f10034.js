var l=Object.defineProperty;var f=(n,s,t)=>s in n?l(n,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[s]=t;var i=(n,s,t)=>(f(n,typeof s!="symbol"?s+"":s,t),t);import{G as w}from"./lil-gui.esm.7a5dd4ff.js";import{B as S,P as z}from"./BaseDemo.9c35b300.js";import{i as R}from"./flower.21c0439b.js";class m extends S{constructor(t){super(t);i(this,"name","\u56FE\u50CF \u2014\u2014 \u653E\u5927\u955C\u5B9E\u73B0");i(this,"image");i(this,"originalImageData");i(this,"offScreenCanvas");i(this,"offScreenContext");i(this,"magnifyRectangle",null);i(this,"magnifyingGlassPos",new z);i(this,"config",{scale:.2,zoomScale:2,zoomRadius:150,resetScene:()=>this.drawScene()});this.canvas=t,this.initOffScreenCanvas(),this.loadImage(R).then(a=>this.image=a).then(()=>{this.drawScene()}),this.createControl().listenEvents()}static init(t){return new m(t)}start(){return this}draw(){return this}initOffScreenCanvas(){this.offScreenCanvas=document.createElement("canvas"),this.offScreenContext=this.offScreenCanvas.getContext("2d"),this.offScreenCanvas.width=this.width,this.offScreenCanvas.height=this.height}createControl(){const{config:t}=this;this.gui=new w;const{gui:a}=this;return a.add(t,"scale").step(.01).min(.1).max(1).onChange(()=>this.drawScene()),a.add(t,"zoomScale").step(1).min(.5).max(10),a.add(t,"zoomRadius").step(10).min(50).max(1e3),this}drawScene(){const{context:t,offScreenContext:a,canvas:e,config:r,image:o}=this,d=this.width,g=this.height,u=o.width*r.scale/o.width,c=o.width*r.scale,h=o.height*u;return t.clearRect(0,0,e.width,e.height),t.drawImage(this.image,-c/2+d/2,-h/2+g/2,c,h),this.originalImageData=t.getImageData(0,0,e.width,e.height),this}drawMagnifyingGlass(t){const{context:a,config:e}=this;return this.magnifyingGlassPos.x=t.x,this.magnifyingGlassPos.x=t.y,a.clearRect(0,0,a.canvas.width,a.canvas.height),this.drawScene(),a.save(),a.lineWidth=e.zoomRadius*.1,a.strokeStyle="rgba(100,255,255,0.5)",a.beginPath(),a.arc(t.x,t.y,e.zoomRadius,0,Math.PI*2,!1),a.clip(),a.drawImage(a.canvas,t.x-e.zoomRadius,t.y-e.zoomRadius,e.zoomRadius*2,e.zoomRadius*2,t.x-e.zoomRadius-(e.zoomRadius*2*e.zoomScale-e.zoomRadius*2)/2,t.y-e.zoomRadius-(e.zoomRadius*2*e.zoomScale-e.zoomRadius*2)/2,e.zoomRadius*2*e.zoomScale,e.zoomRadius*2*e.zoomScale),a.stroke(),a.restore(),this}listenEvents(){const{canvas:t}=this;return t.addEventListener("mousemove",a=>{const e=this.coordinateTransformation(a.clientX,a.clientY);this.drawMagnifyingGlass(e)}),this}}export{m as Demo};
