var f=Object.defineProperty;var g=(h,a,o)=>a in h?f(h,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):h[a]=o;var l=(h,a,o)=>g(h,typeof a!="symbol"?a+"":a,o);import{G as m}from"./lil-gui.esm-hsJpI9MV.js";import{S as p}from"./stats.min-BpIepu9J.js";import{B as b}from"./BaseDemo-DB1y7toB.js";class u extends b{constructor(o){super(o);l(this,"name","绘制动态三角网格");l(this,"pointOfLine",[]);l(this,"triangleOfLine",[]);l(this,"lastTime",0);l(this,"config",{animation:!0,drawBoundary:!1,count:10});this.canvas=o,this.context.lineCap="round",this.context.lineJoin="round",this.createControl().initStats().initDotLine().initTriangleLine()}static init(o){return new u(o)}createControl(){const{config:o}=this;this.gui=new m;const{gui:i}=this;return i.add(o,"animation"),i.add(o,"drawBoundary"),i.add(o,"count").min(5).max(30).onFinishChange(e=>{this.pointOfLine=[],this.triangleOfLine=[],this.initDotLine().initTriangleLine()}),this}initStats(){return this.stats=new p,this.stats.showPanel(0),document.body.appendChild(this.stats.dom),this}draw(o){return this.stats.update(),this.lastTime=o,this.clearScreen().drawGrid().updatePosition().drawScene(o)}initDotLine(){const{context:o,config:i}=this,e=this.width,r=this.height,n=r/i.count;let t=!1;for(let s=n/2;s<=r;s+=n){const c=[];t=!t;for(let d=n/2;d<=e-50;d+=n){const y={boundary:{left:d+(t?n/2:0)-n/2,top:s-n/2,right:d+(t?n/2:0)+n/2,bottom:s+n/2},x:d+(t?n/2:0)+(Math.random()*.8-.4)*n,y:s+(Math.random()*.8-.4)*n,velocityX:Math.random()*.8-.4,velocityY:Math.random()*.8-.4};c.push(y)}this.pointOfLine.push(c)}return this}initTriangleLine(){const{context:o,pointOfLine:i}=this;let e=!0;for(let r=0;r<i.length-1;r++){e=!e;const n=[];for(let t=0;t<i[r].length;t++){const s=e?i[r][t]:i[r+1][t],c=e?i[r+1][t]:i[r][t];s.color=this.randomRgba(),c.color=this.randomRgba(),n.push(s,c)}this.triangleOfLine.push(n)}return this}drawScene(o){return this.triangleOfLine.map(i=>{for(let e=0;e<i.length-2;e++)this.drawTriangle(i[e],i[e+1],i[e+2])}),this}updatePosition(){const{config:o,context:i,pointOfLine:e}=this;if(!o.animation)return this;for(let r=0;r<e.length;r++)for(let n=0;n<e[r].length;n++){const t=e[r][n];(t.x+t.velocityX>t.boundary.right||t.x+t.velocityX<t.boundary.left)&&(t.velocityX=-t.velocityX),(t.y+t.velocityY>t.boundary.bottom||t.y+t.velocityY<t.boundary.top)&&(t.velocityY=-t.velocityY),t.x+=t.velocityX,t.y+=t.velocityY,o.drawBoundary&&(i.save(),i.beginPath(),i.strokeStyle="rgba(255,0,0,0.6)",i.moveTo(t.boundary.left,t.boundary.top),i.lineTo(t.boundary.left,t.boundary.bottom),i.lineTo(t.boundary.right,t.boundary.bottom),i.lineTo(t.boundary.right,t.boundary.top),i.lineTo(t.boundary.left,t.boundary.top),i.stroke(),i.closePath(),i.restore())}return this}drawTriangle(o,i,e,r){const{context:n,config:t}=this;return n.save(),n.fillStyle=r||e.color,n.beginPath(),n.moveTo(o.x,o.y),n.lineTo(i.x,i.y),n.lineTo(e.x,e.y),n.lineTo(o.x,o.y),n.closePath(),n.stroke(),n.fill(),n.restore(),this}}export{u as Demo};
