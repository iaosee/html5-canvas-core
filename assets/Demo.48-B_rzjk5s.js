var O=Object.defineProperty;var T=(o,h,e)=>h in o?O(o,h,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[h]=e;var a=(o,h,e)=>T(o,typeof h!="symbol"?h+"":h,e);import{G as l}from"./lil-gui.esm-hsJpI9MV.js";import{S as I}from"./stats.min-BpIepu9J.js";import{B as E}from"./BaseDemo-DB1y7toB.js";import{i as S}from"./sky-DGchKoT-.js";const _="/html5-canvas-core/assets/smalltree-B4XcthMI.png",p="/html5-canvas-core/assets/tree-twotrunks-wyQaD8WQ.png",u="/html5-canvas-core/assets/grass-CjXqojt1.png",C="/html5-canvas-core/assets/grass2-uoWvDAp9.png";class w extends E{constructor(e){super(e);a(this,"name","动画 —— 视差滚动");a(this,"lastTime",0);a(this,"sky");a(this,"tree");a(this,"nearTree");a(this,"grass");a(this,"grass2");a(this,"skyOffset",0);a(this,"treeOffset",0);a(this,"nearTreeOffset",0);a(this,"grassOffset",0);a(this,"grass2Offset",0);a(this,"config",{SKY_VELOCITY:20,TREE_VELOCITY:40,FAST_TREE_VELOCITY:60,GRASS_VELOCITY:100});this.canvas=e,this.createControl().initStats().initResource().then(t=>{this.sky=t[0],this.tree=t[1],this.nearTree=t[2],this.grass=t[3],this.grass2=t[4]}).then(()=>this.startPlay())}static init(e){return new w(e)}start(){return this}draw(e){return this.clearScreen().drawGrid().drawScene(e),this.stats.update(),this.lastTime=e,this}initStats(){return this.stats=new I,this.stats.showPanel(0),document.body.appendChild(this.stats.dom),this}createControl(){const{config:e}=this;this.gui=new l;const{gui:t}=this;return t.add(e,"SKY_VELOCITY").min(10).max(200).step(10),t.add(e,"TREE_VELOCITY").min(20).max(400).step(10),t.add(e,"FAST_TREE_VELOCITY").min(30).max(600).step(10),t.add(e,"GRASS_VELOCITY").min(80).max(800).step(10),this}initResource(){return Promise.all([this.loadImage(S),this.loadImage(_),this.loadImage(p),this.loadImage(u),this.loadImage(C)])}drawScene(e){const{context:t,canvas:s,config:f,sky:r,tree:m,nearTree:c,grass:i,grass2:n}=this,d=1e3/(e-this.lastTime);this.skyOffset=this.skyOffset<r.width?this.skyOffset+f.SKY_VELOCITY/d:0,this.treeOffset=this.treeOffset<s.width/6*2?this.treeOffset+f.TREE_VELOCITY/d:0,this.nearTreeOffset=this.nearTreeOffset<s.width/4*2?this.nearTreeOffset+f.FAST_TREE_VELOCITY/d:0,this.grassOffset=this.grassOffset<i.width?this.grassOffset+f.GRASS_VELOCITY/d:0,t.save(),t.translate(-this.skyOffset,-1200),t.drawImage(r,0,s.height-r.height+80),t.drawImage(r,r.width-2,s.height-r.height+80),t.drawImage(r,(r.width-2)*2,s.height-r.height+80),t.restore(),t.save(),t.translate(-this.treeOffset,-1200);for(let g=0;g<=8;g++)t.drawImage(m,s.width/6*g,s.height-m.height);t.restore(),t.save(),t.translate(-this.nearTreeOffset,-1200);for(let g=0;g<=6;g++)t.drawImage(c,s.width/4*g,s.height-c.height);return t.restore(),t.save(),t.translate(-this.grassOffset,-1200),t.drawImage(i,0,s.height-i.height),t.drawImage(i,i.width,s.height-i.height),t.drawImage(i,i.width*2,s.height-i.height),t.drawImage(n,0,s.height-n.height),t.drawImage(n,n.width,s.height-n.height),t.drawImage(n,n.width*2,s.height-n.height),t.restore(),this}}export{w as Demo};
