var c=Object.defineProperty;var r=(s,t,h)=>t in s?c(s,t,{enumerable:!0,configurable:!0,writable:!0,value:h}):s[t]=h;var i=(s,t,h)=>(r(s,typeof t!="symbol"?t+"":t,h),h);import{S as o}from"./Sprite.b43779c9.js";class d{constructor(t,h=[]){i(this,"cells",[]);i(this,"cellIndex",0);i(this,"spriteSheet",new Image);this.cells=h,this.spriteSheet.src=t}advance(){this.cellIndex===this.cells.length-1?this.cellIndex=0:this.cellIndex++}paint(t,h){if(!this.spriteSheet)return;const e=this.cells[this.cellIndex];t.width=e.width,t.height=e.height,this.spriteSheet.complete?h.drawImage(this.spriteSheet,e.x,e.y,e.width,e.height,t.x,t.y,e.width,e.height):this.spriteSheet.onload=a=>{h.drawImage(this.spriteSheet,e.x,e.y,e.width,e.height,t.x,t.y,e.width,e.height)}}}const g="/html5-canvas-core/assets/running-sprite-sheet.0440a6a8.png";class w extends o{constructor(h="RunnerSprite"){super(h);i(this,"runnerCells",[{x:0,y:0,width:47,height:64},{x:55,y:0,width:44,height:64},{x:107,y:0,width:39,height:64},{x:152,y:0,width:46,height:64},{x:208,y:0,width:49,height:64},{x:265,y:0,width:46,height:64},{x:320,y:0,width:42,height:64},{x:380,y:0,width:35,height:64},{x:425,y:0,width:35,height:64}]);this.painter=new d(g,this.runnerCells);const e=this.runnerCells[this.painter.cellIndex];this.width=e.width,this.height=e.height}}class m{constructor(t){i(this,"lastAdvance",0);i(this,"PAGEFLIP_INTERVAL",100);this.PAGEFLIP_INTERVAL=t||this.PAGEFLIP_INTERVAL}execute(t,h,e){e-this.lastAdvance>this.PAGEFLIP_INTERVAL&&(t.painter.advance(),this.lastAdvance=e)}}class p{constructor(t,h){i(this,"lastMove",0);this.startX=t,this.endX=h}execute(t,h,e){if(this.lastMove!==0){t.x-=t.velocityX*((e-this.lastMove)/1e3);const a=this.startX||0,n=this.endX||h.canvas.width;t.x=t.x<a?n:t.x}this.lastMove=e}}class v{constructor(t){i(this,"lastJump",0);i(this,"jumpHeight",50);this.jumpHeight=t||this.jumpHeight}execute(t,h,e){e-this.lastJump<1e3||(t.y-=this.jumpHeight,t.y<0&&(t.y=h.canvas.height),this.lastJump=e)}}class y{constructor(t){i(this,"lastTime",0);this.pushTimer=t}reset(t){console.log("reset")}execute(t,h,e){const{pushTimer:a}=this,n=a.getElapsedTime();let l;a.isRunning()&&this.lastTime&&(l=n-this.lastTime,t.x-=t.velocityX*(l/1e3),t.x=t.x<0?h.canvas.width:t.x),this.lastTime=n}}export{v as J,p as M,m as R,d as S,y as a,w as b,g as r};
